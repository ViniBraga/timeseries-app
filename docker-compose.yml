services:
    db:
        image: postgres:15
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: timeseries
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 10s
            timeout: 5s
            retries: 5

    redis:
        image: redis:7-alpine
        ports:
            - "6379:6379"
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            timeout: 5s
            retries: 5

    backend:
        build: ./backend
        ports:
            - "3001:3001"
        volumes:
            - ./backend:/app
            - /app/node_modules
            - /app/node_modules/.prisma
            - shared-uploads:/app/uploads
        working_dir: /app
        command: sh -c "npx prisma generate && npx prisma migrate deploy && npm start"
        environment:
            DATABASE_URL: postgresql://postgres:postgres@db:5432/timeseries
            REDIS_URL: redis://redis:6379
        stdin_open: true
        tty: true
        depends_on:
            db:
                condition: service_healthy
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:3001/ping"]
            interval: 10s
            timeout: 5s
            retries: 5

    worker:
        build: ./backend
        volumes:
            - ./backend:/app
            - /app/node_modules
            - /app/node_modules/.prisma
            - ./uploads:/app/uploads
            - shared-uploads:/app/uploads
        working_dir: /app
        command: sh -c "npx prisma generate && npm run worker"
        environment:
            DATABASE_URL: postgresql://postgres:postgres@db:5432/timeseries
            REDIS_URL: redis://redis:6379
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_healthy

    frontend:
        build: ./frontend
        ports:
            - "5173:5173"
        volumes:
            - ./frontend:/app
            - /app/node_modules
        working_dir: /app
        command: npm run dev -- --host 0.0.0.0
        environment:
            - CHOKIDAR_USEPOLLING=true
            - VITE_API_URL=http://localhost:3001
        stdin_open: true
        tty: true
        depends_on:
            backend:
                condition: service_healthy

volumes:
  postgres_data:
  shared-uploads: